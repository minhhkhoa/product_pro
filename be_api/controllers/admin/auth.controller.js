const Account = require("../../models/account.model")
const Role = require("../../models/role.model")
var md5 = require('md5') //-m√£ h√≥a m·∫≠t kh·∫©u c·ªßa account

//[post]: /admin/auth/login
module.exports.loginPost = async (req, res) => {
  const email = req.body.email;
  const password = req.body.password;

  const user = await Account.findOne({
    email: email,
    deleted: false,
  });

  if (!user) {
    return res.json({
      code: 0,
      message: "Email kh√¥ng t·ªìn t·∫°i!",
    });
  }

  if (md5(password) !== user.password) {
    return res.json({
      code: 1,
      message: "M·∫≠t kh·∫©u kh√¥ng ch√≠nh x√°c!",
    });
  }

  if (user.status === "inactive") {
    return res.json({
      code: 2,
      message: "T√†i kho·∫£n ƒë√£ b·ªã kh√≥a!",
    });
  }
  // Thi·∫øt l·∫≠p cookie cho token
  res.cookie("token", user.token, {
    httpOnly: false,   // B·∫£o m·∫≠t h∆°n (ch·ªâ backend c√≥ th·ªÉ ƒë·ªçc cookie)
    secure: true,    // N·∫øu ch·∫°y tr√™n HTTP, set l√† false (ƒë·ªÉ tr√™n HTTPS, set l√† true)
    sameSite: "None", // C·∫ßn thi·∫øt cho vi·ªác chia s·∫ª cookie gi·ªØa c√°c domain
    maxAge: 24 * 60 * 60 * 1000, // Cookie h·∫øt h·∫°n sau 24 gi·ªù
  });

  // Login th√†nh c√¥ng
  return res.json({
    code: 3,
    message: "ƒêƒÉng nh·∫≠p th√†nh c√¥ng!",
    token: user.token, // N·∫øu c·∫ßn thi·∫øt, c√≥ th·ªÉ tr·∫£ l·∫°i token cho frontend
  });
};


// [GET]: /admin/auth/logout
module.exports.logout = (req, res) => {
  res.clearCookie("token"); // üî• X√≥a cookie token
  res.json({ message: "ƒêƒÉng xu·∫•t th√†nh c√¥ng!" });
};

// [GET]: /admin/auth/info
module.exports.info = async (req, res) => {
  const token = req.cookies.token;
  if (!token) {
    return res.status(401).json({ message: "Token kh√¥ng t·ªìn t·∫°i!" }); // Tr·∫£ v·ªÅ 401 n·∫øu kh√¥ng c√≥ token
  }

  try {
    // T√¨m user theo token
    const user = await Account.findOne({ token: token });
    if (!user) {
      return res.status(401).json({ message: "Kh√¥ng t√¨m th·∫•y user!" }); // Tr·∫£ v·ªÅ 401 n·∫øu kh√¥ng t√¨m th·∫•y user
    }

    // T√¨m role c·ªßa user
    const role = await Role.findOne({ _id: user.role_id });
    if (!role) {
      return res.status(401).json({ message: "Kh√¥ng t√¨m th·∫•y role!" }); // Tr·∫£ v·ªÅ 401 n·∫øu kh√¥ng t√¨m th·∫•y role
    }

    // Tr·∫£ v·ªÅ th√¥ng tin user v√† role
    return res.status(200).json({
      message: "Th√¥ng tin user:",
      user: {
        email: user.email,
        fullName: user.fullName,
        role: role.title,
      },
    });
  } catch (err) {
    // X·ª≠ l√Ω l·ªói n·∫øu c√≥
    return res.status(500).json({ message: "L·ªói l·∫•y th√¥ng tin!" }); // Tr·∫£ v·ªÅ 500 n·∫øu c√≥ l·ªói h·ªá th·ªëng
  }
};

